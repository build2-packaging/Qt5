# Note: If anything in this file seems underdocumented it is probably covered
#       in libQt5Core/QtCore/buildfile.
#
import! [metadata] moc = Qt5Moc%exe{qt5moc}

include ../../../QtGui/

include ../platformsupport/edid/
include ../platformsupport/fontdatabases/
include ../platformsupport/input/xkbcommon/
include ../platformsupport/services/
include ../platformsupport/themes/

# C++ source files.
#
# Note that the sources in gl_integrations/ cannot be omitted (even if OpenGL
# is disabled).
#
src = gl_integrations/qxcbglintegrationfactory          \
      gl_integrations/qxcbglintegration                 \
      gl_integrations/qxcbnativeinterfacehandler        \
      qxcbatom                                          \
      qxcbbackingstore                                  \
      qxcbclipboard                                     \
      qxcbconnection                                    \
      qxcbconnection_basic                              \
      qxcbconnection_screens                            \
      qxcbconnection_xi2                                \
      qxcbcursor                                        \
      qxcbdrag                                          \
      qxcbeventdispatcher                               \
      qxcbeventqueue                                    \
      qxcbimage                                         \
      qxcbintegration                                   \
      qxcbkeyboard                                      \
      qxcbmime                                          \
      qxcbnativeinterface                               \
      qxcbscreen                                        \
      qxcbsessionmanager                                \
      qxcbsystemtraytracker                             \
      qxcbwindow                                        \
      qxcbwmsupport                                     \
      qxcbxsettings

# C++ headers to be moc'd (foo.h -> moc_foo.cpp) and the output compiled.
#
moc_hdr = gl_integrations/qxcbglintegrationplugin       \
          qxcbclipboard                                 \
          qxcbconnection                                \
          qxcbmime                                      \
          qxcbnativeinterface                           \
          qxcbsystemtraytracker                         \
          qxcbeventqueue                                \
          qxcbeventdispatcher                           \
          qxcbconnection_basic

# The names of the C++ source files generated by moc from header files (foo.h
# -> moc_foo.cpp).
#
moc_gen_src = $regex.apply($moc_hdr, '(.+/)?(.+)', '\1moc_\2')

# C++ sources files to be moc'd (foo.cpp -> foo.moc) and the output compiled.
#
moc_src = qxcbclipboard qxcbsessionmanager

# The XCB platform plugin library (implemented by lib{Qt5XcbQpa}).
#
../lib{qxcb}: cxx{qxcbmain} ../lib{Qt5XcbQpa}

# The XCB implementation, shared between lib{qxcb}, lib{qxcb-egl-integration},
# and lib{qxcb-glx-integration} (@@ the latter two not being built yet).
#
../lib{Qt5XcbQpa}: ../../../mkspecs/hxx{**}                                     \
                      ../../hxx{QtPlatformHeaders/**                            \
                                QtPlatformHeaders/QPlatformHeaderHelper.        \
                                Qt*Support/**}                                  \
                    hxx{**} cxx{$src}

# The "metadata library": its purpose is to make sure all the imported
# libraries are resolved for the ad hoc moc compilation rules below.
#
# Note: use a rule hint to resolve ambiguity between C and C++ library.
#
[rule_hint=cxx] libul{Qt5PluginsXcbMeta}: \
  ../../../QtGui/lib{Qt5Gui Qt5GuiPrivate}

# Plugin metadata file.
#
../lib{Qt5XcbQpa}: file{xcb.json}

# Linker version script.
#
define vsc: file
vsc{*}: extension = vers

../lib{Qt5XcbQpa}: vsc{QtXcbQpa.version}: \
  include = ($linux || $bsd ? adhoc : false)

# Dependencies involving moc-generated source files.
#

# Dependencies involving lib{Qt5XcbQpa}, moc-generated source files
# (moc_foo.cpp), and the C++ headers they were generated from (for example,
# `moc foo.h` produces moc_foo.cpp).
#
for s: hxx{$moc_hdr}
{
  n = $name($s)
  d = $directory($s)

  ../lib{Qt5XcbQpa}: $d/cxx{moc_$n}
  $d/cxx{moc_$n}: $s
}

# Dependencies involving lib{Qt5XcbQpa}, moc-generated source files (foo.moc),
# and the C++ source files the .moc's were generated from (for example, `moc
# foo.cpp` produces foo.moc).
#
for s: cxx{$moc_src}
{
  n = $name($s)
  d = $directory($s)

  ../lib{Qt5XcbQpa}: $d/moc{$n}: include = adhoc
  $d/moc{$n}: $s
}

../lib{qxcb}: moc{qxcbmain}: include = adhoc
moc{qxcbmain}: cxx{qxcbmain}

# Rule to run moc on a header file.
#
# Use -f to override the path moc uses to #include the input file, which is
# relative to the output directory, with just the name of the input file.
#
# Note that we depend on libul{Qt5PluginsXcbMeta} in order to ensure all the
# imported libraries are resolved for these ad hoc rules.
#
# Also add QtGui's exported header search directories (via
# libul{Qt5PluginsXcbMeta}) otherwise certain definitions required by moc will
# be missing.
#
cxx{~'/moc_(.*)/'}: hxx{~'/\1/'} libul{Qt5PluginsXcbMeta} $moc
{{
  o = $path($>[0])
  t = $(o).t

  dep_incl = $cxx.lib_poptions(libul{Qt5PluginsXcbMeta})

  depdb hash $dep_incl

  # Note: exclude libul{Qt5PluginsXcbMeta} from update during match not to
  #       mess up its for-install'ness.
  #
  depdb dyndep                                                  \
    --byproduct --drop-cycles --what=header --default-type=h    \
    --update-exclude libul{Qt5PluginsXcbMeta}                   \
    --file $t

  diag moc ($<[0])

  s = $path($<[0])

  sys_incl = $regex.apply($cxx.sys_hdr_dirs, '(.+)', '-I\1')

  $moc --include $moc_predefs_path                      \
    $cc.poptions $cxx.poptions $dep_incl $sys_incl      \
    -f $leaf($s) --output-dep-file --dep-file-path $t -o $o $s
}}

# Rule to run moc on a source file.
#
moc{~'/(.*)/'}: cxx{~'/\1/'} libul{Qt5PluginsXcbMeta} $moc
{{
  o = $path($>[0])
  t = $(o).t

  dep_incl = $cxx.lib_poptions(libul{Qt5PluginsXcbMeta})

  depdb hash $dep_incl

  depdb dyndep                                                  \
    --byproduct --drop-cycles --what=header --default-type=h    \
    --update-exclude libul{Qt5PluginsXcbMeta}                   \
    --file $t

  diag moc ($<[0])

  s = $path($<[0])

  sys_incl = $regex.apply($cxx.sys_hdr_dirs, '(.+)', '-I\1')

  $moc --include $moc_predefs_path                      \
    $cc.poptions $cxx.poptions $dep_incl $sys_incl      \
    --output-dep-file --dep-file-path $t -o $o $s
}}

# These utility libraries are shared between lib{Qt5XcbQpa},
# lib{qxcb-egl-integration} and lib{qxcb-glx-integration} (and the other
# platform plugins).
#
../lib{Qt5XcbQpa}:                                                      \
  ../platformsupport/services/libul{Qt5ServiceSupport}                  \
  ../platformsupport/themes/libul{Qt5ThemeSupport}                      \
  ../platformsupport/fontdatabases/libul{Qt5FontDatabaseSupport}        \
  ../platformsupport/edid/libul{Qt5EdidSupport}                         \
  ../platformsupport/input/xkbcommon/libul{Qt5XkbCommonSupport}

../lib{Qt5XcbQpa qxcb}: libul{Qt5PluginsXcbMeta}

# Build options.
#

# Note: headers in gl_integrations/ are included unconditionally so cannot be
#       excluded even if OpenGL is disabled.
#
cxx.poptions =+ "-I$out_base" "-I$src_base"     \
                "-I$src_base/gl_integrations"   \
                "-I$src_root/QtGuiPlugins/QtThemeSupport"

# Define macros.
#
cxx.poptions += -DQT_NO_FOREACH                 \
                -DQT_EDID_SUPPORT_LIB           \
                -DQT_FONTDATABASE_SUPPORT_LIB   \
                -DQT_SERVICE_SUPPORT_LIB        \
                -DQT_THEME_SUPPORT_LIB          \
                -DQT_XKBCOMMON_SUPPORT_LIB

# The XCB plugin objects and moc outputs. Note that there is no need to set
# anything on obj{$moc_src} because those files (.moc) are all included
# instead of compiled.
#
# As explained in README-DEV (section "Symbol export"), QT_BUILD_XCB_PLUGIN
# and QT_BUILD_XCB_QPA_LIB_LIB have no effect on platforms that use XCB, and
# QT_XCB_QPA_LIB_LIB is not referenced anywhere that matters. But define them
# anyway just in case something changes.
#
obj{$src $moc_gen_src} moc{$moc_src} cxx{$moc_gen_src}: \
  cxx.poptions += $platforms_poptions                   \
                  -DQT_BUILD_XCB_PLUGIN -DQT_BUILD_XCB_QPA_LIB_LIB

{obj moc}{qxcbmain}: cxx.poptions += -DQT_PLUGIN -DQT_XCB_QPA_LIB_LIB

if ($linux || $bsd)
{
  # The version script does nothing but put all symbols inside the
  # Qt_5_PRIVATE_API version node (that is, it does not restrict the
  # visibility of any symbols).
  #
  ../lib{Qt5XcbQpa}: \
    cxx.loptions += "-Wl,--version-script=$src_base/xcb/QtXcbQpa.version"
}

# @@ TODO Package fontconfig?
#
../lib{Qt5XcbQpa}: cxx.libs += -pthread -lfontconfig    \
                               -lICE                    \
                               -lSM                     \
                               -lX11                    \
                               -lX11-xcb                \
                               -lXext                   \
                               -lxcb                    \
                               -lxcb-icccm              \
                               -lxcb-image              \
                               -lxcb-keysyms            \
                               -lxcb-randr              \
                               -lxcb-render             \
                               -lxcb-render-util        \
                               -lxcb-shape              \
                               -lxcb-shm                \
                               -lxcb-sync               \
                               -lxcb-xfixes             \
                               -lxcb-xinerama           \
                               -lxcb-xinput             \
                               -lxcb-xkb                \
                               -lxkbcommon              \
                               -lxkbcommon-x11

if $linux
  ../lib{Qt5XcbQpa}: cxx.libs += -ldl

if ($linux || $bsd)
  ../lib{Qt5XcbQpa}: cxx.libs += -lm

# Installation.
#
hxx{*}: install = false

# Note that lib{Qt5XcbQpa} is installed to lib/ along with lib{Qt5Core} and
# lib{Qt5Gui} (unlike lib{qxcb}).
#
../lib{qxcb}: install = lib/qt5/plugins/platforms/
