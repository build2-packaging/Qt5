# Note: if anything in this file seems underdocumented it is probably covered
#       in libQt5Core/QtCore/buildfile.
#

import impl_libs_jpeg = libjpeg-turbo%lib{jpeg}

import! [metadata] moc = Qt5Moc%exe{qt5moc}

include ../../QtGui/

./: lib{qgif}:  gif/hxx{main qgifhandler_p} \
                gif/cxx{main qgifhandler}
./: lib{qico}:  ico/hxx{main qicohandler} \
                ico/cxx{main qicohandler}
./: lib{qjpeg}: jpeg/hxx{main qjpeghandler_p} \
                jpeg/cxx{main qjpeghandler}

lib{qgif qico qjpeg}: ../../hxx{mkspecs/**}

# Plugin metadata files.
#
lib{qgif}:  gif/file{gif.json}
lib{qico}:  ico/file{ico.json}
lib{qjpeg}: jpeg/file{jpeg.json}

# The "metadata library": its purpose is to make sure all the imported
# libraries are resolved for the moc ad hoc rules below.
#
# Note: use a rule hint to resolve ambiguity between C and C++ library.
#
[rule_hint=cxx] libul{Qt5PluginsImageFormatsMeta}: \
                  ../../QtGui/lib{Qt5Gui Qt5GuiPrivate}

# Dependencies involving moc_main.cpp and main.h (from which it is generated).
#
lib{qgif}:  gif/cxx{moc_main}
lib{qico}:  ico/cxx{moc_main}
lib{qjpeg}: jpeg/cxx{moc_main}

gif/cxx{moc_main}:  gif/hxx{main}
ico/cxx{moc_main}:  ico/hxx{main}
jpeg/cxx{moc_main}: jpeg/hxx{main}

# -I options for the system header directories.
#
sys_incl = $regex.apply($cxx.sys_hdr_dirs, '(.+)', '-I\1')

# Rule to run moc on a header file.
#
# Use -f to override the path moc uses to #include the input file, which is
# relative to the output directory, with just the name of the input file.
#
# Note that we depend on libul{Qt5PluginsImageFormatsMeta} in order to ensure
# all the imported libraries are resolved for these ad hoc rules.
#
# Also add QtGui's exported header search directories (via
# libul{Qt5PluginsImageFormatsMeta}) otherwise certain definitions required by
# moc will be missing.
#
cxx{~'/moc_(.*)/'}: hxx{~'/\1/'} libul{Qt5PluginsImageFormatsMeta} $moc
{{
  o = $path($>[0])
  t = $(o).t

  dep_incl = $cxx.lib_poptions(libul{Qt5PluginsImageFormatsMeta})

  depdb hash $dep_incl

  # Note: exclude libul{Qt5PluginsImageFormatsMeta} from update during match
  #       not to mess up its for-install'ness.
  #
  depdb dyndep                                                  \
    --byproduct --drop-cycles --what=header --default-type=h    \
    --update-exclude libul{Qt5PluginsImageFormatsMeta}          \
    --file $t

  diag moc ($<[0])

  s = $path($<[0])

  $moc --include $moc_predefs_path                      \
    $cc.poptions $cxx.poptions $dep_incl $sys_incl      \
    -f $leaf($s) --output-dep-file --dep-file-path $t -o $o $s
}}

# Rule to run moc on a source file.
#
# See the header-input moc rule regarding the header prerequisites.
#
moc{~'/(.*)/'}: cxx{~'/\1/'} libul{Qt5PluginsImageFormatsMeta} $moc
{{
  o = $path($>[0])
  t = $(o).t

  dep_incl = $cxx.lib_poptions(libul{Qt5PluginsImageFormatsMeta})

  depdb hash $dep_incl

  depdb dyndep                                                  \
    --byproduct --drop-cycles --what=header --default-type=h    \
    --update-exclude libul{Qt5PluginsImageFormatsMeta}          \
    --file $t

  diag moc ($<[0])

  s = $path($<[0])

  $moc --include $moc_predefs_path                      \
    $cc.poptions $cxx.poptions $dep_incl $sys_incl      \
    --output-dep-file --dep-file-path $t -o $o $s
}}

lib{qgif qico qjpeg}: libul{Qt5PluginsImageFormatsMeta}

lib{qjpeg}: $impl_libs_jpeg

# Build options.
#
cxx.poptions += -DQT_PLUGIN

if ($cxx.class == 'gcc')
  cxx.coptions += -fvisibility=hidden -fvisibility-inlines-hidden

gif/obj{main qgifhandler} gif/obj{moc_main}: \
  cxx.poptions =+ "-I$out_base/gif" "-I$src_base/gif"
ico/obj{main qicohandler} ico/obj{moc_main}: \
  cxx.poptions =+ "-I$out_base/ico" "-I$src_base/ico"
jpeg/obj{main qjpeghandler} jpeg/obj{moc_main}: \
  cxx.poptions =+ "-I$out_base/jpeg" "-I$src_base/jpeg"

if ($cxx.target.class != 'windows')
  lib{qgif qico qjpeg}: cxx.libs += -pthread

# Installation.
#
hxx{*}:               install = false
lib{qgif qico qjpeg}: install = lib/qt5/plugins/imageformats/

libs{qgif}: # @@ TMP dist order
libs{qico}: # @@ TMP dist order
libs{qjpeg}: # @@ TMP dist order
